<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.didi.user.users.dao.mapper.UserDtoMapper" >
  <resultMap id="BaseResultMap" type="cn.com.didi.user.users.domain.UserDto" >
    <id column="account_Id" property="accountId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="pcode" property="pcode" jdbcType="VARCHAR" />
    <result column="cname" property="cname" jdbcType="VARCHAR" />
    <result column="bpn" property="bpn" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="profile_photo" property="profilePhoto" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="address_code" property="addressCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    account_Id, user_name, password, pcode, cname, bpn, state, profile_photo, role, create_time, 
    address_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.didi.user.users.domain.UserDtoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from users
    where account_Id = #{accountId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from users
    where account_Id = #{accountId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.didi.user.users.domain.UserDtoExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.didi.user.users.domain.UserDto" useGeneratedKeys="true" keyProperty="accountId">
    insert into users (account_Id, user_name, password, 
      pcode, cname, bpn, 
      state, profile_photo, role, 
      create_time, address_code)
    values (#{accountId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{pcode,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{bpn,jdbcType=VARCHAR}, 
      #{state,jdbcType=CHAR}, #{profilePhoto,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{addressCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.didi.user.users.domain.UserDto" useGeneratedKeys="true" keyProperty="accountId">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_Id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="pcode != null" >
        pcode,
      </if>
      <if test="cname != null" >
        cname,
      </if>
      <if test="bpn != null" >
        bpn,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="profilePhoto != null" >
        profile_photo,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="addressCode != null" >
        address_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="pcode != null" >
        #{pcode,jdbcType=VARCHAR},
      </if>
      <if test="cname != null" >
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="bpn != null" >
        #{bpn,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="profilePhoto != null" >
        #{profilePhoto,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addressCode != null" >
        #{addressCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.didi.user.users.domain.UserDtoExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.accountId != null" >
        account_Id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.pcode != null" >
        pcode = #{record.pcode,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null" >
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.bpn != null" >
        bpn = #{record.bpn,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.profilePhoto != null" >
        profile_photo = #{record.profilePhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addressCode != null" >
        address_code = #{record.addressCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set account_Id = #{record.accountId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      pcode = #{record.pcode,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      bpn = #{record.bpn,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=CHAR},
      profile_photo = #{record.profilePhoto,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      address_code = #{record.addressCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.didi.user.users.domain.UserDto" >
    update users
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="pcode != null" >
        pcode = #{pcode,jdbcType=VARCHAR},
      </if>
      <if test="cname != null" >
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="bpn != null" >
        bpn = #{bpn,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="profilePhoto != null" >
        profile_photo = #{profilePhoto,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addressCode != null" >
        address_code = #{addressCode,jdbcType=VARCHAR},
      </if>
    </set>
    where account_Id = #{accountId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.didi.user.users.domain.UserDto" >
    update users
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      pcode = #{pcode,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      bpn = #{bpn,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      profile_photo = #{profilePhoto,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      address_code = #{addressCode,jdbcType=VARCHAR}
    where account_Id = #{accountId,jdbcType=BIGINT}
  </update>
  <select id="selectUsers" resultMap="BaseResultMap">
  select  account_Id, user_name, cname, bpn, state, role, create_time, 
    address_code from users where role!='P' 
    <if test="time.startTime != null">and create_time&gt;=#{time.startTime,jdbcType=TIMESTAMP}</if>
    <if test="time.endTime != null">and create_time&lt;=#{time.endTime,jdbcType=TIMESTAMP}</if>
    <if test="time.state != null">and state = #{time.state,jdbcType=CHAR}</if>
    <if test="time.key != null">and user_name = #{time.key,jdbcType=VARCHAR}
          <if test="time.accountId != null"> or account_Id = #{time.accountId,jdbcType=BIGINT}</if>
    </if>
    order by create_time desc
    </select>
    
    <select id="selectPlatformUsers" resultMap="BaseResultMap">
  select  account_Id, user_name, cname, bpn, state, role, create_time, 
    address_code from users where role='P' 
    <if test="time.startTime != null">and create_time&gt;=#{time.startTime,jdbcType=TIMESTAMP}</if>
    <if test="time.endTime != null">and create_time&lt;=#{time.endTime,jdbcType=TIMESTAMP}</if>
    <if test="time.state != null">and state = #{time.state,jdbcType=CHAR}</if>
    <if test="time.key != null">and user_name = #{time.key,jdbcType=VARCHAR}
    <if test="time.accountId != null"> or account_Id = #{time.accountId,jdbcType=BIGINT}</if>
    </if>
    order by create_time desc
    </select>
</mapper>