<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.didi.user.register.dao.mapper.PhoneVcDtoMapper" >
  <resultMap id="BaseResultMap" type="cn.com.didi.user.register.domain.PhoneVcDto" >
    <id column="vc_id" property="vcId" jdbcType="BIGINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="vc" property="vc" jdbcType="INTEGER" />
    <result column="ltt" property="ltt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    vc_id, phone, state, create_time, vc, ltt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.didi.user.register.domain.PhoneVcDtoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from phone_vc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from phone_vc
    where vc_id = #{vcId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from phone_vc
    where vc_id = #{vcId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.didi.user.register.domain.PhoneVcDtoExample" >
    delete from phone_vc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.didi.user.register.domain.PhoneVcDto" useGeneratedKeys="true" keyProperty="vcId">
    insert into phone_vc (vc_id, phone, state, 
      create_time, vc, ltt
      )
    values (#{vcId,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{vc,jdbcType=INTEGER}, #{ltt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.didi.user.register.domain.PhoneVcDto" useGeneratedKeys="true" keyProperty="vcId">
    insert into phone_vc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vcId != null" >
        vc_id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="vc != null" >
        vc,
      </if>
      <if test="ltt != null" >
        ltt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vcId != null" >
        #{vcId,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vc != null" >
        #{vc,jdbcType=INTEGER},
      </if>
      <if test="ltt != null" >
        #{ltt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.didi.user.register.domain.PhoneVcDtoExample" resultType="java.lang.Integer" >
    select count(*) from phone_vc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update phone_vc
    <set >
      <if test="record.vcId != null" >
        vc_id = #{record.vcId,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vc != null" >
        vc = #{record.vc,jdbcType=INTEGER},
      </if>
      <if test="record.ltt != null" >
        ltt = #{record.ltt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update phone_vc
    set vc_id = #{record.vcId,jdbcType=BIGINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      vc = #{record.vc,jdbcType=INTEGER},
      ltt = #{record.ltt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.didi.user.register.domain.PhoneVcDto" >
    update phone_vc
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vc != null" >
        vc = #{vc,jdbcType=INTEGER},
      </if>
      <if test="ltt != null" >
        ltt = #{ltt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where vc_id = #{vcId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.didi.user.register.domain.PhoneVcDto" >
    update phone_vc
    set phone = #{phone,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      vc = #{vc,jdbcType=INTEGER},
      ltt = #{ltt,jdbcType=TIMESTAMP}
    where vc_id = #{vcId,jdbcType=BIGINT}
  </update>
</mapper>